{
    "skipped_not_main": "Skipping DP request {req_id}, not mine",
    "already_assigned":"Request {req_id} already assigned to order",
    "dp_created": "DP request created successfully!",
    "dp_canceling": "Cancelling DP request {req}",
    "dp_canceled": "DP request {req} cancelled successfully!",
    "tx_hash": "TX Hash: {_hash}",
    "request_canceled": "Request has been cancelled",
    "downloading_ipfs": "Downloading IPFS content...",
    "cannot_download_from_ipfs": "Cannot download data from IPFS, cancelling processing",
    "stop_prev_docer": "Stopping previous docker registry",
    "clear_up_prev_docers": "Cleaning up docker registry",
    "run_new_dockers": "Running new docker registry",
    "clean_registry_container": "Cleaning up docker container",
    "run_compose": "Running docker-compose",
    "attaching_docker": "Attaching to docker process",
    "dp_completed": "DP request {dprequest} completed successfully!",
    "dp_newer_finished": "DP request never finished, processing order {order_id}",
    "order_newer_approved": "Order was never approved, skipping",
    "order_approved_skipping": "Order was never approved, skipping",
    "dp_new_request": "Processing NEW DP request {dprequest}",
    "dp_cant_found": "DP {dprequest} wasn't found",
    "loop_count": "loop count = {count}, seconds = {seconds}, list = {list_length}",
    "dp_finding_order": "Finding order with DP request {dprequest}",
    "checking_order": "Checking order {order_id}",
    "dp_cant_find_order": "Could't find order with DP request {dprequest}",
    "do_req_checking": "Checking DO request: {i}",
    "skip_to_next": "Order doesn't meet requirements, skipping to next request",
    "placing_order": "Placing order...",
    "order_already_created_skipping": "Order already created, skipping to next DO request",
    "waiting_for_order": "Waiting for order {order} approval...",
    "was_not_approved_in_last_blocks": "Order was not approved in the last ~{blocks_count} blocks, skipping to next request",
    "order_processed_sucessfully": "Order {order}, with DO request {dorequest} and DP request {dprequest} processed successfully",
    "finished_processing": "Finished processing order {order}",
    "dp_timeout": "DP request timed out!",
    "added_enclave": "Added the enclave processor to the order!",
    "dp_found_order": "Finding order with DP request {dprequest}",
    "found_in_cache": "Found in cache, order_id = {order_id}",
    "order_placed": "Order placed successfully!",
    "cleaning_up": "Cleaning up previous DP requests",
    "done": "[DONE]"
}